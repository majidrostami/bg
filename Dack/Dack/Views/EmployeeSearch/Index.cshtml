@model Dack.Models.EmployeeSearchCriteria

@{
	ViewBag.Title = "Employee Search";
}
<style>
	table, th, td {
		border: none;
		padding: 5px;
	}

	table {
		border-spacing: 15px;
	}
</style>


<script language="javascript" type="text/javascript">
	function GetSubDepartments(_departmentId) {
		var procemessage = "<option value='0'> Please wait...</option>";
		$("#ddlsubDepartment").html(procemessage).show();
		var url = "/EmployeeSearch/GetSubDepartmentByDepartmentId/";

		$.ajax({
			url: url,
			data: { departmentId: _departmentId },
			cache: false,
			type: "POST",
			success: function (data) {
				var markup = "<option value='0'>Select sub department</option>";
				for (var x = 0; x < data.length; x++) {
					markup += "<option value=" + data[x].Value + ">" + data[x].Text + "</option>";
				}
				$("#ddlsubDepartment").html(markup).show();
			},
			error: function (reponse) {
				alert("error : " + reponse);
			}
		});
	}
</script>
@using (Html.BeginForm("DisplayEmployees", "EmployeeSearch", FormMethod.Post))
{

<h2>Define your search criteria</h2>
<br />
<table>
	<tr>
		<td><label> First Name: </label></td>
		<td>@Html.TextBoxFor(m => m.FirstName, new { @id = "txtFirstName", @style = "width:200px;" })</td>
	</tr>
	<tr>
		<td><label> Last Name: </label></td>
		<td>@Html.TextBoxFor(m => m.LastName, new { @id = "txtLastName", @style = "width:200px;" })</td>
	</tr>
	<tr>
		<td><label> Department: </label> </td>
		<td>@Html.DropDownListFor(m => m.DepartmentID, ViewBag.Departments as SelectList, "Select Department", new { @id = "ddlDepartment", @style = "width:200px;", @onchange = "javascript:GetSubDepartments(this.value);" })</td>
	</tr>
	<tr>
		<td><label> Sub Department: </label></td>
		<td>@Html.DropDownListFor(m => m.SubDepartmentID, Enumerable.Empty<SelectListItem>(), "Select Sub Department", new { @id = "ddlsubDepartment" })</td>
	</tr>
</table>
<input type="submit" value="Submit" />
}
